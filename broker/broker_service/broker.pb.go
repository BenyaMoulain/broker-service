// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: broker/broker_service/broker.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainName string `protobuf:"bytes,1,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_service_broker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_service_broker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_broker_broker_service_broker_proto_rawDescGZIP(), []int{0}
}

func (x *ReadRequest) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

type ReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip          string  `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	VectorClock []int32 `protobuf:"varint,2,rep,packed,name=vector_clock,json=vectorClock,proto3" json:"vector_clock,omitempty"`
	DnsIp       string  `protobuf:"bytes,3,opt,name=dns_ip,json=dnsIp,proto3" json:"dns_ip,omitempty"`
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_service_broker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_service_broker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_broker_broker_service_broker_proto_rawDescGZIP(), []int{1}
}

func (x *ReadResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ReadResponse) GetVectorClock() []int32 {
	if x != nil {
		return x.VectorClock
	}
	return nil
}

func (x *ReadResponse) GetDnsIp() string {
	if x != nil {
		return x.DnsIp
	}
	return ""
}

type ReadConflictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainName string `protobuf:"bytes,1,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	DnsIp      string `protobuf:"bytes,2,opt,name=dns_ip,json=dnsIp,proto3" json:"dns_ip,omitempty"`
}

func (x *ReadConflictRequest) Reset() {
	*x = ReadConflictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_service_broker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadConflictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadConflictRequest) ProtoMessage() {}

func (x *ReadConflictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_service_broker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadConflictRequest.ProtoReflect.Descriptor instead.
func (*ReadConflictRequest) Descriptor() ([]byte, []int) {
	return file_broker_broker_service_broker_proto_rawDescGZIP(), []int{2}
}

func (x *ReadConflictRequest) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *ReadConflictRequest) GetDnsIp() string {
	if x != nil {
		return x.DnsIp
	}
	return ""
}

type ReadConflictResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip          string  `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	VectorClock []int32 `protobuf:"varint,2,rep,packed,name=vector_clock,json=vectorClock,proto3" json:"vector_clock,omitempty"`
	DnsIp       string  `protobuf:"bytes,3,opt,name=dns_ip,json=dnsIp,proto3" json:"dns_ip,omitempty"`
}

func (x *ReadConflictResponse) Reset() {
	*x = ReadConflictResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_service_broker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadConflictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadConflictResponse) ProtoMessage() {}

func (x *ReadConflictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_service_broker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadConflictResponse.ProtoReflect.Descriptor instead.
func (*ReadConflictResponse) Descriptor() ([]byte, []int) {
	return file_broker_broker_service_broker_proto_rawDescGZIP(), []int{3}
}

func (x *ReadConflictResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ReadConflictResponse) GetVectorClock() []int32 {
	if x != nil {
		return x.VectorClock
	}
	return nil
}

func (x *ReadConflictResponse) GetDnsIp() string {
	if x != nil {
		return x.DnsIp
	}
	return ""
}

type GetDNSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDNSRequest) Reset() {
	*x = GetDNSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_service_broker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDNSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDNSRequest) ProtoMessage() {}

func (x *GetDNSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_service_broker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDNSRequest.ProtoReflect.Descriptor instead.
func (*GetDNSRequest) Descriptor() ([]byte, []int) {
	return file_broker_broker_service_broker_proto_rawDescGZIP(), []int{4}
}

type GetDNSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *GetDNSResponse) Reset() {
	*x = GetDNSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_service_broker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDNSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDNSResponse) ProtoMessage() {}

func (x *GetDNSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_service_broker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDNSResponse.ProtoReflect.Descriptor instead.
func (*GetDNSResponse) Descriptor() ([]byte, []int) {
	return file_broker_broker_service_broker_proto_rawDescGZIP(), []int{5}
}

func (x *GetDNSResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

var File_broker_broker_service_broker_proto protoreflect.FileDescriptor

var file_broker_broker_service_broker_proto_rawDesc = []byte{
	0x0a, 0x22, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x0b,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x0c,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x15, 0x0a, 0x06, 0x64, 0x6e, 0x73, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x6e, 0x73, 0x49, 0x70, 0x22, 0x4d, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x64, 0x6e, 0x73, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x6e, 0x73, 0x49, 0x70, 0x22, 0x60, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x15, 0x0a, 0x06, 0x64, 0x6e, 0x73, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x6e, 0x73, 0x49, 0x70, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x4e,
	0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44,
	0x4e, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x32, 0xcc, 0x01, 0x0a, 0x0d, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x04,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x13, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x44, 0x4e, 0x53, 0x12, 0x15, 0x2e, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x4e, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x4e, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c,
	0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_broker_broker_service_broker_proto_rawDescOnce sync.Once
	file_broker_broker_service_broker_proto_rawDescData = file_broker_broker_service_broker_proto_rawDesc
)

func file_broker_broker_service_broker_proto_rawDescGZIP() []byte {
	file_broker_broker_service_broker_proto_rawDescOnce.Do(func() {
		file_broker_broker_service_broker_proto_rawDescData = protoimpl.X.CompressGZIP(file_broker_broker_service_broker_proto_rawDescData)
	})
	return file_broker_broker_service_broker_proto_rawDescData
}

var file_broker_broker_service_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_broker_broker_service_broker_proto_goTypes = []interface{}{
	(*ReadRequest)(nil),          // 0: broker.ReadRequest
	(*ReadResponse)(nil),         // 1: broker.ReadResponse
	(*ReadConflictRequest)(nil),  // 2: broker.ReadConflictRequest
	(*ReadConflictResponse)(nil), // 3: broker.ReadConflictResponse
	(*GetDNSRequest)(nil),        // 4: broker.GetDNSRequest
	(*GetDNSResponse)(nil),       // 5: broker.GetDNSResponse
}
var file_broker_broker_service_broker_proto_depIdxs = []int32{
	0, // 0: broker.BrokerService.Read:input_type -> broker.ReadRequest
	4, // 1: broker.BrokerService.GetDNS:input_type -> broker.GetDNSRequest
	2, // 2: broker.BrokerService.ReadConflict:input_type -> broker.ReadConflictRequest
	1, // 3: broker.BrokerService.Read:output_type -> broker.ReadResponse
	5, // 4: broker.BrokerService.GetDNS:output_type -> broker.GetDNSResponse
	3, // 5: broker.BrokerService.ReadConflict:output_type -> broker.ReadConflictResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_broker_broker_service_broker_proto_init() }
func file_broker_broker_service_broker_proto_init() {
	if File_broker_broker_service_broker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_broker_broker_service_broker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_broker_service_broker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_broker_service_broker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadConflictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_broker_service_broker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadConflictResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_broker_service_broker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDNSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_broker_service_broker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDNSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_broker_broker_service_broker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_broker_broker_service_broker_proto_goTypes,
		DependencyIndexes: file_broker_broker_service_broker_proto_depIdxs,
		MessageInfos:      file_broker_broker_service_broker_proto_msgTypes,
	}.Build()
	File_broker_broker_service_broker_proto = out.File
	file_broker_broker_service_broker_proto_rawDesc = nil
	file_broker_broker_service_broker_proto_goTypes = nil
	file_broker_broker_service_broker_proto_depIdxs = nil
}
